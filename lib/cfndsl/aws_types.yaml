Resources:
  "AWS::AutoScaling::AutoScalingGroup" :
   UpdatePolicy:
    AutoScalingRollingUpdate: JSON
   Properties:
    AvailabilityZones: [ String ]
    Cooldown: String
    DesiredCapacity: String
    HealthCheckGracePeriod: Integer
    HealthCheckType: String
    InstanceId: String
    LaunchConfigurationName: String
    LoadBalancerNames: [ String ]
    MaxSize: Integer
    MinSize: Integer
    MetricsCollection: [ MetricsCollectionType ]
    NotificationConfiguration: String
    Tags: [ AutoScalingTags ]
    TerminationPolicies: [ String ]
    VPCZoneIdentifier: [ String ]
  "AWS::AutoScaling::LaunchConfiguration" :
    Properties:
     AssociatePublicIpAddress: Boolean
     BlockDeviceMappings: [ BlockDeviceMapping ]
     EbsOptimized: Boolean
     IamInstanceProfile: String
     ImageId: String
     InstanceMonitoring: Boolean
     InstanceType: String
     KernelId: String
     KeyName: String
     RamDiskId: String
     SecurityGroups: [ String ]
     SpotPrice: String
     UserData: String
  "AWS::AutoScaling::ScalingPolicy" :
   Properties:
    AdjustmentType: String
    AutoScalingGroupName: String
    Cooldown: String
    ScalingAdjustment: String
  "AWS::AutoScaling::ScheduledAction" :
   Properties:
    AutoScalingGroupName: String
    DesiredCapacity: Integer
    EndTime: String
    MaxSize: Integer
    MinSize: Integer
    Recurrence: String
    StartTime: String
#  "AWS::AutoScaling::Trigger" :
#   Properties:
#    Dimensions: [ MetricDimension ]
#    MetricName: String
#    Namespace: String
#    Period: String
#    Statistic: String
#    Unit: String
#    UpperBreachScaleIncrement: String
#    LowerBreachScaleIncrement: String
#    AutoScalingGroupName: String
#    BreachDuration: String
#    UpperThreshold: String
#    LowerThreshold: String
  "AWS::CloudFormation::CustomResource" :
   Properties:
    ServiceToken: String
  "AWS::CloudFormation::Stack" :
   Properties:
    TemplateURL: String
    TimeoutInMinutes: String
    Parameters: CloudFormationStackParameters
    NotificationARNs: [ String ]
  "AWS::CloudFormation::WaitCondition" :
   Properties:
    Handle: String
    Timeout: String
    Count: String
   Attributes:
    Data: String
  "AWS::CloudFormation::WaitConditionHandle" :
   Properties: {}
  "AWS::CloudFront::Distribution" :
   Properties:
    DistributionConfig: String
   Attributes:
    DomainName: String
  "AWS::CloudTrail::Trail" :
   Properties :
    IncludeGlobalServiceEvents : Boolean
    IsLogging : Boolean
    S3BucketName : String
    S3KeyPrefix : String
    SnsTopicName : String
  "AWS::CloudWatch::Alarm" :
   Properties:
    ActionsEnabled: String
    AlarmActions: [ String ]
    AlarmDescription: String
    AlarmName: String
    ComparisonOperator: String
    Dimensions: [ MetricDimension ]
    EvaluationPeriods: String
    InsufficientDataActions: [ String ]
    MetricName: String
    Namespace: String
    OKActions: [ String ]
    Period: String
    Statistic: String
    Threshold: String
    Unit: String
  "AWS::DynamoDB::Table" :
   Properties :
    AttributeDefinitions : [ AttributeDefinitionsType ]
    GlobalSecondaryIndexes : [ GlobalSecondaryIndexesType ]
    KeySchema : [ KeySchemaType  ]
    LocalSecondaryIndexes : [ LocalSecondaryIndexesType ]
    ProvisionedThroughput : ProvisionedThroughputType
    TableName : String
  "AWS::EC2::CustomerGateway" :
    Properties :
      BgpAsn : Number
      IpAddress : String
      Tags :  [ EC2Tag ]
      Type : String
  "AWS::EC2::EIP" :
    Properties:
     InstanceId: String
     Domain: String
    Attributes:
     AllocationId: String
  "AWS::EC2::EIPAssociation" :
    Properties:
     InstanceId: String
     EIP: String
     AllocationId: String
     NetworkInterfaceId: String
     PrivateIpAddress: String
  "AWS::EC2::Instance" :
   Properties:
    BlockDeviceMappings : [ BlockDeviceMapping ]
    EbsOptimized : Boolean
    InstanceInitiatedShutdownBehavior : String
    NetworkInterfaces : [ NetworkInterfaceType ]
    AvailabilityZone: String
    DisableApiTermination: String
    IamInstanceProfile: String
    ImageId: String
    InstanceType: String
    KernelId: String
    KeyName: String
    Monitoring: String
    PlacementGroupName: String
    PrivateIpAddress: String
    RamDiskId: String
    SecurityGroups: [String]
    SecurityGroupIds: [String]
    SourceDestCheck: Boolean
    SubnetId: String
    Tags: [ EC2Tag ]
    Tenancey: String
    UserData: String
    Volumes: [ EC2MountPoint ]
   Attributes:
    AvailabilityZone: String
    PrivateDnsName: String
    PublicDnsName: String
    PrivateIp: String
    PublicIp: String
  "AWS::EC2::InternetGateway" :
   Properties:
    Tags: [ EC2Tag ]
  "AWS::EC2::NetworkAclEntry" :
    Properties:
     Tags: [ EC2Tag ]
     CidrBlock: String
     Egress: Boolean
     Icmp: EC2Icmp
     NetworkAclId: String
     PortRange: EC2PortRange
     RuleAction: String
     RuleNumber: Integer
     Protocol: Integer
  "AWS::EC2::NetworkInterface" :
    Properties:
     Tags: [ EC2Tag ]
     GroupSet: [ String ]
     SubnetId: String
     PrivateIpAddress: String
    Attributes:
     PrivateIpAddress: String
  "AWS::EC2::Route" :
   Properties:
    DestinationCidrBlock: String
    GatewayId: String
    InstanceId: String
    NetworkInterfaceId: String
    RouteTableId: String
  "AWS::EC2::RouteTable" :
   Properties:
    VpcId: String
    Tags: [ EC2Tag ]
  "AWS::EC2::SecurityGroup" :
    Properties:
     GroupDescription: String
     SecurityGroupIngress: [ EC2SecurityGroupRule ]
     SecurityGroupEgress: [ EC2SecurityGroupRule ]
     VpcId: String
     Tags : [ EC2Tag ]
  "AWS::EC2::SecurityGroupEgress" :
   Properties:
    GroupId: String
    IpProtocol: String
    CidrIp: String
    DestinationSecurityGroupId: String
    FromPort: Number
    ToPort: Number
  "AWS::EC2::SecurityGroupIngress" :
   Properties:
    GroupName: String
    GroupId: String
    IpProtocol: String
    CidrIp: String
    SourceSecurityGroupName: String
    SourceSecurityGroupId: String
    SourceSecurityGroupOwnerId: String
    FromPort: Number
    ToPort: Number
  "AWS::EC2::Subnet" :
   Properties:
    AvailabilityZone: String
    VpcId: String
    CidrBlock: String
    Tags: [ EC2Tag ]
  "AWS::EC2::SubnetRouteTableAssociation" :
   Properties:
    SubnetId: String
    RouteTableId: String
  "AWS::EC2::SubnetNetworkAclAssociation" :
   Properties:
    SubnetId: String
    NetworkAclId: String
  "AWS::EC2::Volume" :
   Properties:
    AvailabilityZone: String
    Size: String
    SnapshotId: String
    Tags: [ EC2Tag ]
    Encrypted: Boolean
    Iops: Number
    VolumeType: String
  "AWS::EC2::VolumeAttachment" :
   Properties:
    InstanceId: String
    VolumeId: String
    Device: String
  "AWS::EC2::VPC" :
   Properties:
    CidrBlock: String
    InstanceTenancy: String
    Tags: [ EC2Tag ]
    EnableDnsSupport: Boolean
    EnableDnsHostnames: Boolean
  "AWS::EC2::DHCPOptions" :
   Properties:
    DomainName : String
    DomainNameServers : [ String ]
    NetbiosNameServers : [ String ]
    NetbiosNodeType : Number
    NtpServers : [ String ]
    Tags : [ EC2Tag ]
  "AWS::EC2::VPCDHCPOptionsAssociation" :
   Properties:
    DhcpOptionsId: String
    VpcId: String
  "AWS::EC2::NetworkAcl" :
   Properties:
    VpcId: String
    Tags : [ EC2Tag ]
  "AWS::EC2::VPCGatewayAttachment" :
   Properties:
    InternetGatewayId: String
    VpcId: String
    VpnGatewayId: String
  "AWS::ElastiCache::CacheCluster" :
   Properties:
    AutoMinorVersionUpgrade: Boolean
    CacheNodeType: String
    CacheParameterGroupName: String
    CacheSecurityGroupNames: [String]
    CacheSubnetGroupName: String
    Engine: String
    EngineVersion: String
    NotificationTopicArn: String
    NumCacheNodes: String
    Port: Integer
    PreferrredAvailabilityZone: String
    PreferredMaintenanceWindow: String
    VpcSecurityGroupIds: [String]
  "AWS::ElastiCache::ParameterGroup" :
    Properties:
     CacheParameterGroupFamily: String
     Description: String
     Properties: [ String ]
  "AWS::ElastiCache::SecurityGroup" :
   Properties:
    Decription: String
  "AWS::ElastiCache::SecurityGroupIngress" :
   Properties:
    CacheSecurityGroupName: String
    EC2SecurityGroupName: String
    EC2SecurityGroupOwnerId: String
  "AWS::ElastiCache::SubnetGroup" :
   Properties:
    Description: String
    SubnetIds: [String]
  "AWS::ElasticBeanstalk::Application" :
   Properties:
    ApplicationVersions: [ ApplicationVersion ]
    ConfigurationTemplates: [ ConfigurationTemplate ]
  "AWS::ElasticBeanstalk::Environment" :
   Properties:
    ApplicationName: String
    CNAMEPrefix: String
    OptionSettings: OptionSetting
    OptionsToRemove: OptionSetting
    SolutionStackName: String
    TemplateName: String
    VersionLabel: String
  "AWS::ElasticLoadBalancing::LoadBalancer" :
   Properties:
    AvailabilityZones: [String]
    CrossZone: Boolean
    HealthCheck: HealthCheck
    Instances: [String]
    Listeners: [ Listener ]
    AppCookieStickinessPolicy: AppCookieStickinessPolicy
    LBCookieStickinessPolicy:  LBCookieStickinessPolicy
    Scheme: String
    SecurityGroups: [ String ]
    Subnets: [ String ]
    ConnectionDrainingPolicy: ConnectionDrainingPolicy
    ConnectionSettings: ConnectionSettings
    LoadBalancerName: String
   Attributes:
    CanonicalHostedZoneName: String
    CanonicalGostedZoneNameID: String
    DNSName: String
    SourceSecurityGroup.GroupName: String
    SourceSecurityGroup.OwnerAlias: String
  "AWS::IAM::AccessKey" :
   Properties:
    Serial: Integer
    Status: String
    UserName: String
   Attributes:
    SecretAccessKey: String
  "AWS::IAM::Group" :
   Properties:
    Path: String
    Policies: [ IAMEmbeddedPolicy ]
   Attributes:
    Arn : String
  "AWS::IAM::InstanceProfile" :
   Properties:
    Path: String
    Roles: [ String ]
   Attributes:
    Arn : String
  "AWS::IAM::Policy" :
   Properties:
    PolicyName: String
    PolicyDocument: JSON
    Groups: [ String ]
    Users: [ String ]
    Roles: [ String ]
  "AWS::IAM::Role" :
   Properties:
    AssumeRolePolicyDocument: JSON
    Path: String
    Policies: [ IAMEmbeddedPolicy ]
   Attributes:
    Arn : String
  "AWS::IAM::UserToGroupAddition" :
   Properties:
    GroupName: String
    Users: [String]
  "AWS::IAM::User" :
   Properties:
    Path: String
    Groups: [String]
    LoginProfile: String
    Policies: [ IAMEmbeddedPolicy ]
   Attributes:
    Arn: String
  "AWS::Logs::LogGroup" :
    Properties:
      RetentionInDays: Integer
  "AWS::Logs::MetricFilter" :
    Properties:
      FilterPattern: String
      LogGroupName: String
      MetricTransformations: [ MetricTransformation ]
  "AWS::OpsWorks::App" :
    Properties:
      AppSource: OpsWorksSource
      Attributes: JSON
      Description: String
      Domains: [ String ]
      EnableSsl: Boolean
      Name: String
      Shortname: String
      SslConfiguration: OpsWorksSslConfiguration
      StackId: String
      Type: String
  "AWS::OpsWorks::ElasticLoadBalancerAttachment" :
    Properties:
      ElasticLoadBalancerName: String
      LayerId: String
  "AWS::OpsWorks::Instance" :
    Properties:
      AmiId: String
      Architecture: String
      AvailabilityZone: String
      InstallUpdatesOnBoot: Boolean
      InstanceType: String
      LayerIds: [ String ]
      Os: String
      RootDeviceType: String
      SshKeyName: String
      StackId: String
      SubnetId: String
  "AWS::OpsWorks::Layer" :
    Properties:
      Attributes: JSON
      AutoAssignElasticIps: Boolean
      AutoAssignPublicIps: Boolean
      CustomInstanceProfileArn: String
      CustomRecipes: OpsWorksRecipes
      CustomSecurityGroupIds: [ String ]
      EnableAutoHealing: Boolean
      InstallUpdatesOnBoot: Boolean
      Name: String
      Packages: [ String ]
      Shortname: String
      StackId: String
      Type: String
      VolumeConfiguration: [ OpsWorksVolumeConfiguration ]
  "AWS::OpsWorks::Stack" :
    Properties:
      Attributes: JSON
      ConfigurationManager: StackConfigurationManager
      CustomCookbooksSource: OpsWorksSource
      CustomJson: JSON
      DefaultAvailabilityZone: String
      DefaultInstanceProfileArn: String
      DefaultOs: String
      DefaultRootDeviceType: String
      DefaultSshKeyName: String
      DefaultSubnetId: String
      HostnameTheme: String
      Name: String
      ServiceRoleArn: String
      UseCustomCookbooks: Boolean
      VpcId: String
  "AWS::RDS::DBInstance" :
    Properties:
     DBSnapshotIdentifier: String
     AllocatedStorage: String
     AvailabilityZone: String
     BackupRetentionPeriod: String
     DBInstanceClass: String
     DBName: String
     DBParameterGroupName: String
     DBSecurityGroups: [ String ]
     DBSubnetGroupName: String
     Engine: String
     EngineVersion: String
     LicenseModel: String
     MasterUsername: String
     MasterUserPassword: String
     Port: String
     PreferredBackupWindow: String
     PreferredMaintenanceWindow: String
     MultiAZ: Boolean
     Tags: [ EC2Tag ]
     VPCSecurityGroups: [ String ]
    Attributes:
     DBInstanceIdentifier: String
     Endpoint.Address: String
     Endpoint.Port: String
  "AWS::RDS::DBSecurityGroup" :
   Properties:
    EC2VpcId: String
    DBSecurityGroupIngress: [ RDSSecurityGroupRule ]
    GroupDescription: String
    SubnetIds: [ String ]
  "AWS::RDS::DBSubnetGroup" :
   Properties:
    DBSubnetGroupDescription: String
    SubnetIds: [ String ]
  "AWS::RDS::DBSecurityGroupIngress" :
   Properties:
    CIDRIR: String
    DBSecurityGroupName: String
    EC2SecurityGroupId: String
    EC2SecurityGroupName: String
    EC2SecurityGroupOwnerId: String
  "AWS::Route53::RecordSet" :
   Properties:
    HostedZoneId: String
    HostedZoneName: String
    Name: String
    Type: String
    TTL: String
    ResourceRecords: [ String ]
    Weight: Integer
    SetIdentifier: String
    AliasTarget: AliasTarget
    Comment: String
  "AWS::Route53::RecordSetGroup" :
   Properties:
    HostedZoneId: String
    HostedZoneName: String
    RecordSets: [ JSON ]
  "AWS::S3::Bucket" :
   Properties:
    BucketName: String
    AccessControl: String
    WebsiteConfiguration: JSON
    Tags: [ EC2Tag ]
   Attributes:
    DomainName: String
    WebsiteUrl: String
  "AWS::S3::BucketPolicy" :
   Properties:
    PolicyDocument: JSON
    Bucket: String
  "AWS::SDB::Domain" :
   Properties: {}
  "AWS::SNS::TopicPolicy" :
   Properties:
    PolicyDocument: JSON
    Topics: [ String ]
#  "AWS::SNS::Subscription" :
  "AWS::SNS::Topic" :
    Properties:
      DisplayName: String
      Subscription: [ SubscriptionProperty ]
      TopicName: String
    Attributes:
      TopicName: String
  "AWS::SQS::QueuePolicy" :
   Properties:
    PolicyDocument: JSON
    Queues: [ String ]
  "AWS::SQS::Queue" :
    Properties:
     VisibilityTimeout: String
    Attributes:
     Arn: String
     QueueName: String


Types:
 String:  String
 Boolean: Boolean
 JSON:    JSON
 Integer: Integer
 Number:  Number
 BlockDeviceMapping:
  DeviceName: String
  VirtualName: String
  NoDevice:  JSON
  Ebs: BlockDeviceTemplate
 BlockDeviceTemplate:
  SnapshotId: String
  VolumeSize: String
  VolumeType: String
  Iops: Number
  Encrypted: Boolean
 NotificationConfiguration:
  TopicARN: String
  NotificationType: [ String ]
 AutoScalingTags:
  Key: String
  Value: String
  PropagateAtLaunch: Boolean
 CloudFormationStackParameters: JSON
 CloudFrontDistributionConfig:
  S3Origin: CloudFrontS3Origin
  CustomOrigin: CloudFrontCustomOrigin
  Enabled: Boolean
  DefaultRootObject: String
  CNAMEs: [ String ]
  Logging: CloudFrontLogging
  TrustedSigners: [ String ]
  RequiredProtocols: [ String ]
  Comment: String
 CloudFrontS3Origin:
  DNSName: String
  OriginAccessIdentity: String
 CloudFrontCustomOrigin:
  DNSName: String
  OriginProtocolPolicy: String
  HTTPPort: String
  HTTPSPort: String
 CloudFrontLogging:
  Bucket: String
  Prefix: String
 MetricDimension:
  Name: String
  Value: String
 EC2MountPoint:
  Device: String
  VolumeId: String
 EC2SecurityGroupRule:
  IpProtocol: String
  CidrIp: String
  SourceSecurityGroupName: String
  SourceSecurityGroupId: String
  SourceSecurityGroupOwnerId: String
  FromPort: String
  ToPort: String
 EC2Tag:
  Key: String
  Value: String
 ApplicationVersion:
  VersionLabel: String
  SourceBundle: SourceBundle
 ConfigurationTemplate:
  TemplateName: String
  OptionSettings: OptionSetting
  SolutionStackName: String
 OptionSetting:
  NameSpace: String
  OptionName: String
  Value: String
 SourceBundle:
  S3Bucket: String
  S3Key: String
 AppCookieStickinessPolicy:
  CookieName: String
  PolicyName: String
 HealthCheck:
  HealthyThreshold: String
  Interval: String
  Target: String
  Timeout: String
  UnhealthyThreshold: String
 LBCookieStickinessPolicy:
  CookieExpirationPeriod: String
  PolicyName: String
 LBOrAppCookieStickinessPolicy:
  CookieName: String
  PolicyName: String
  CookieExpirationPeriod: String
 ConnectionDrainingPolicy:
  Enabled: Boolean
  Timeout: Integer
 ConnectionSettings:
  IdleTimeout: Integer
 Listener:
  InstancePort: String
  InstanceProtocol: String
  LoadBalancerPort: String
  Protocol: String
  SSLCertificateId: String
  PolicyNames: [ LBOrAppCookieStickinessPolicy ]
 RDSSecurityGroupRule:
  CIDRIP: String
  EC2SecurityGroupName: String
  EC2SecurityGroupOwnerId: String
 AliasTarget:
  HostedZoneId: String
  DNSName: String
 WebsiteConfiguration:
  IndexDocument: String
  ErrorDocument: String
 SubscriptionProperty:
  Endpoint: String
  Protocol: String
 IAMEmbeddedPolicy:
  PolicyDocument: JSON
  PolicyName: String
 EC2PortRange:
  From: Integer
  To: Integer
 EC2Icmp:
  Code: Integer
  Type: Integer
 MetricsCollectionType:
  Granularity: String
  Metrics: [ String ]
 AttributeDefinitionsType:
  AttributeName: String
  AttributeType: String
 GlobalSecondaryIndexesType:
  IndexName: String
  KeySchema: [ KeySchemaType ]
  Projection: [ ProjectionType ]
  ProvisionedThroughput: ProvisionedThroughputType
 KeySchemaType:
  AttributeName: String
  KeyType: String
 LocalSecondaryIndexesType:
  IndexName: String
  KeySchema: [ KeySchemaType ]
  Projection: [ ProjectionType ]
 ProvisionedThroughputType:
  ReadCapacityUnits: Number
  WriteCapacityUnits: Number
 ProjectionType:
  NonKeyAttributes: [ String ]
  ProjectionType: String
 NetworkInterfaceType:
  AssociatePublicIpAddress: Boolean
  DeleteOnTermination: Boolean
  Description: String
  DeviceIndex: String
  GroupSet: [ String ]
  NetworkInterfaceId: String
  PrivateIpAddress: String
  PrivateIpAddresses: [ PrivateIpAddressSpecification ]
  SecondaryPrivateIpAddressCount: Integer
  SubnetId: String
 PrivateIpAddressSpecification:
  PrivateIpAddress: String
  Primary: Boolean
 StackConfigurationManager:
   Name: String
   Version: String
 OpsWorksSource:
   Password: String
   Revision: String
   SshKey: String
   Type: String
   Url: String
   Username: String
 OpsWorksSslConfiguration:
   Certificate: String
   Chain: String
   PrivateKey: String
 OpsWorksRecipes:
   Configure: [ String ]
   Deploy: [ String ]
   Setup: [ String ]
   Shutdown: [ String ]
   Undeploy: [ String ]
 OpsWorksVolumeConfiguration:
   MountPoint: String
   NumberOfDisks: Number
   RaidLevel: Number
   Size: Number
 MetricTransformation:
   MetricName: String
   MetricNamespace: String
   MetricValue: String
