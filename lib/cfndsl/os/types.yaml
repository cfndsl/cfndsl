Resources:
  "OS::Barbican::Order" :
    Properties:
      algorithm: String
      bit_length: Number
      expiration: String
      mode: String
      name: String
      payload_content_type: String
    Attributes:
      order_ref: String
      secret_ref: String
      status: String
  "OS::Barbican::Secret" :
    Properties:
      algorithm: String
      bit_length: Number
      expiration: String
      mode: String
      name: String
      payload: String
      payload_content_encoding: String
      payload_content_type: String
    Attributes:
      decrypted_payload: String
      status: String
  "OS::Ceilometer::Alarm" :
    Properties:
      alarm_actions : List
      comparison_operator : String
      description : String
      enabled : Boolean
      evaluation_periods : Integer
      insufficient_data_actions : List
      matching_metadata : JSON
      meter_name : String
      ok_actions : List
      period : Integer
      repeat_actions : Boolean
      statistic : String
      threshold : Number
  "OS::Ceilometer::CombinationAlarm" :
    Properties:
      alarm_actions : List
      alarm_ids : List
      description : String
      enabled : Boolean
      insufficient_data_actions : List
      ok_actions : List
      operator : String
      repeat_actions : Boolean
  "OS::Cinder::Volume" :
    Properties:
      availability_zone : String
      #The availability zone in which the volume will be created.
      #Updates cause replacement.
      #Optional property.
      backup_id : String
      #If specified, the backup to create the volume from.
      #Updates cause replacement.
      #Optional property.
      description : String
      #A description of the volume.
      #Can be updated without replacement.
      #Optional property.
      image : String
      #If specified, the name or ID of the image to create the volume from.
      #Updates cause replacement.
      #Optional property.
      #Value must be of type glance.image
      metadata : JSON
      #Key/value pairs to associate with the volume.
      #Can be updated without replacement.
      #Optional property.
      name : String
      #A name used to distinguish the volume.
      #Can be updated without replacement.
      #Optional property.
      size : Integer
      #The size of the volume in GB. On update only increase in size is supported.
      #Can be updated without replacement.
      #Optional property.
      #The value must be at least 1.
      snapshot_id : String
      #If specified, the snapshot to create the volume from.
      #Updates cause replacement.
      #Optional property.
      source_volid : String
      #If specified, the volume to use as source.
      #Updates cause replacement.
      #Optional property.
      volume_type : String
      #If specified, the type of volume to use, mapping to a specific backend.
      #Updates cause replacement.
      #Optional property.
      imageRef : String
      #Note DEPRECATED - Use property image.
      #The ID of the image to create the volume from.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      availability_zone: String
      #The availability zone in which the volume is located.
      bootable: String
      #Boolean indicating if the volume can be booted or not.
      created_at: String
      #The timestamp indicating volume creation.
      display_description: String
      #Description of the volume.
      display_name: String
      #Name of the volume.
      metadata: String
      #Key/value pairs associated with the volume.
      size: String
      #The size of the volume in GB.
      snapshot_id: String
      #The snapshot the volume was created from, if any.
      source_volid: String
      #The volume used as source, if any.
      status: String
      #The current status of the volume.
      volume_type: String
      #The type of the volume mapping to a backend, if any.
  "OS::Cinder::VolumeAttachment" :
    Properties:
      instance_uuid : String
      #The ID of the server to which the volume attaches.
      #Can be updated without replacement.
      #Required property.
      mountpoint : String
      #The location where the volume is exposed on the instance. This assignment may not be honored and it is advised that the path /dev/disk/by-id/virtio-<VolumeId> be used instead.
      #Can be updated without replacement.
      #Optional property.
      volume_id : String
      #The ID of the volume to be attached.
      #Can be updated without replacement.
      #Required property.
  "OS::Glance::Image" :
    Properties:
      container_format : String
      # Container format of image.
      # Updates cause replacement.
      # Required property.
      # Allowed values: ami, ari, aki, bare, ova, ovf
      disk_format : String
      # Disk format of image.
      # Updates cause replacement.
      # Required property.
      # Allowed values: ami, ari, aki, vhd, vmdk, raw, qcow2, vdi, iso
      id : String
      # The image ID. Glance will generate a UUID if not specified.
      # Updates cause replacement.
      # Optional property.
      is_public : Boolean
      # Scope of image accessibility. Public or private. Default value is False means private.
      # Updates cause replacement.
      # Optional property, defaults to “False”.
      location : String
      # URL where the data for this image already resides. For example, if the image data is stored in swift, you could specify “swift://example.com/container/obj”.
      # Updates cause replacement.
      # Required property.
      min_disk : Integer
      # Amount of disk space (in GB) required to boot image. Default value is 0 if not specified and means no limit on the disk size.
      # Updates cause replacement.
      # Optional property.
      # The value must be at least 0.
      min_ram : Integer
      # Amount of ram (in MB) required to boot image. Default value is 0 if not specified and means no limit on the ram size.
      # Updates cause replacement.
      # Optional property.
      # The value must be at least 0.
      name : String
      # Name for the image. The name of an image is not unique to a Image Service node.
      # Updates cause replacement.
      # Optional property.
      protected : Boolean
      # Whether the image can be deleted. If the value is True, the image is protected and cannot be deleted.
      # Updates cause replacement.
      #Optional property.
  "OS::Heat::AccessPolicy" :
    Properties:
      AllowedResources : List
      # Resources that users are allowed to access by the DescribeStackResource API.
      # Updates cause replacement.
      # Required property.
  "OS::Heat::AutoScalingGroup" :
    Properties:
      cooldown : Integer
      # Cooldown period, in seconds.
      # Can be updated without replacement.
      # Optional property.
      desired_capacity : Integer
      # Desired initial number of resources.
      # Can be updated without replacement.
      # Optional property.
      max_size : Integer
      # Maximum number of resources in the group.
      # Can be updated without replacement.
      # Required property.
      # The value must be at least 0.
      min_size : Integer
      #Minimum number of resources in the group.
      # Can be updated without replacement.
      # Required property.
      # The value must be at least 0.
      resource : JSON
      #Resource definition for the resources in the group, in HOT
      #format. The value of this property is the definition of a
      #resource just as if it had been declared in the template
      #itself.  Can be updated without replacement.  Required
      #property.
      rolling_updates : RollingUpdateMap
      # Policy for rolling updates for this scaling group.
      # Can be updated without replacement.
      # Optional property.
  "OS::Heat::CWLiteAlarm" :
    Properties:
      AlarmActions: [ String ]
      AlarmDescription: String
      ComparisonOperator: String
      Dimensions: [ String ]
      EvaluationPeriods: String
      InsufficientDataActions: [ String ]
      MetricName: String
      Namespace: String
      OKActions: [ String ]
      Period: String
      Statistic: String
      Threshold: String
      Units: String

  "OS::Heat::CloudConfig" :
    Properties:
      cloud_config: JSON
    Attributes:
      config: String
  "OS::Heat::HARestarter" :
    Properties:
      InstanceId: String
    Attributes:
      AlarmUrl: String

  "OS::Heat::InstanceGroup" :
    Properties:
      AvailabilityZones: [ String ]
      LaunchConfigurationName: String
      LoadBalancerNames: [ String ]
      Size: Integer
      Tags: [ EC2Tag ]
    Attributes:
      InstanceList: String

  "OS::Heat::MultipartMime" :
    Properties:
      cloud_config: [ MultiPartMimeMap ]
    Attributes:
      config: String

  "OS::Heat::RandomString" :
    Properties:
      character_classes : [ CharacterClassMap ]
      # A list of character class and their constraints to generate the random string from.
      # Updates cause replacement.
      # Optional property.
    Attributes:
      value: String
      # The random string generated by this resource. This value is also available by referencing the resource.

  "OS::Heat::ResourceGroup" :
    Properties:
      count : Integer
      # The number of instances to create.
      # Can be updated without replacement.
      # Optional property, defaults to “1”.
      # The value must be at least 1.
      resource_def : ResourceDefMap
      # Resource definition for the resources in the group. The value of this property is the definition of a resource just as if it had been declared in the template itself.
      # Updates cause replacement.
      # Required property.

      #Attributes:
      #  refs: String
      #  # A list of resource IDs for the resources in the group

  "OS::Heat::ScalingPolicy" :
    Properties:
      adjustment_type : String
      #Type of adjustment (absolute or percentage).
      #Can be updated without replacement.
      #Required property.
      #Allowed values: change_in_capacity, exact_capacity, percent_change_in_capacity
      auto_scaling_group_id : String
      #AutoScaling group ID to apply policy to.
      #Updates cause replacement.
      #Required property.
      cooldown : Number
      #Cooldown period, in seconds.
      #Can be updated without replacement.
      #Optional property.
      scaling_adjustment : Number
      #Size of adjustment.
      #Can be updated without replacement.
      #Required property.
    Attributes:
      alarm_url: String
      #A signed url to handle the alarm.
  "OS::Heat::SoftwareConfig" :
    Properties:
      config : String
      #Configuration script or manifest which specifies what actual configuration is performed.
      #Updates cause replacement.
      #Optional property.
      group : String
      #Namespace to group this software config by when delivered to a server. This may imply what configuration tool is going to perform the configuration.
      #Updates cause replacement.
      #Optional property, defaults to “Heat::Ungrouped”.
      inputs : [ SoftwareConfigInputMap ]
      #Schema representing the inputs that this software config is expecting.
      #Updates cause replacement.
      #Optional property.
      options : JSON
      #LLMap containing options specific to the configuration management tool used by this resource.
      #Updates cause replacement.
      #Optional property.
      outputs : [ SoftwareConfigOutputMap ]
      #Schema representing the outputs that this software config will produce.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      config: String
      #The config value of the software config.
  "OS::Heat::SoftwareDeployment" :
    Properties:
      actions : [ String ]
      #Which stack actions will result in this deployment being triggered.
      #Can be updated without replacement.
      #Optional property, defaults to “[‘CREATE’, ‘UPDATE’]”.
      #Allowed values: CREATE, UPDATE, DELETE, SUSPEND, RESUME
      config : String
      #ID of software configuration resource to execute when applying to the server.
      #Can be updated without replacement.
      #Optional property.
      input_values : JSON
      #Input values to apply to the software configuration on this server.
      #Can be updated without replacement.
      #Optional property.
      name : String
      #Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.
      #Updates cause replacement.
      #Optional property.
      server : String
      #ID of Nova server to apply configuration to.
      #Updates cause replacement.
      #Optional property.
      signal_transport : String
      #How the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.
      #Updates cause replacement.

      #Optional property, defaults to “CFN_SIGNAL”.
      #Allowed values: CFN_SIGNAL, HEAT_SIGNAL, NO_SIGNAL
    Attributes:
      deploy_status_code: String
      #Returned status code from the configuration execution
      deploy_stderr: String
      #Captured stderr from the configuration execution.
      deploy_stdout: String
      #Captured stdout from the configuration execution.
  "OS::Heat::StructuredConfig" :
    Properties:
      config : JSON
      # Map representing the configuration data structure which will be serialized to JSON format.
      # Updates cause replacement.
      # Optional property.
      group : String
      # Namespace to group this software config by when delivered to a server. This may imply what configuration tool is going to perform the configuration.
      # Updates cause replacement.
      # Optional property, defaults to “Heat::Ungrouped”.
      inputs : [ SoftwareConfigInputMap ]
      # Schema representing the inputs that this software config is expecting.
      # Updates cause replacement.
      # Optional property.
      options : JSON
      #Map containing options specific to the configuration management tool used by this resource.
      #Updates cause replacement.
      #Optional property.
      outputs : [ SoftwareConfigOutputMap ]
      #Schema representing the outputs that this software config will produce.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      config: String
      #The config value of the software config.
  "OS::Heat::StructuredDeployment" :
    Properties:
      actions : [ String ]
      #Which stack actions will result in this deployment being triggered.
      #Can be updated without replacement.
      #Optional property, defaults to “[‘CREATE’, ‘UPDATE’]”.
      #Allowed values: CREATE, UPDATE, DELETE, SUSPEND, RESUME
      config : String
      #ID of software configuration resource to execute when applying to the server.
      #Can be updated without replacement.
      #Optional property.
      input_key : String
      #Name of key to use for substituting inputs during deployment
      #Updates cause replacement.
      #Optional property, defaults to “get_input”.
      input_values : JSON
      #Input values to apply to the software configuration on this server.
      #Can be updated without replacement.
      #Optional property.
      name : String
      #Name of the derived config associated with this deployment. This is used to apply a sort order to the list of configurations currently deployed to a server.
      #Updates cause replacement.
      #Optional property.
      server : String
      #ID of Nova server to apply configuration to.
      #pdates cause replacement.
      #ptional property.
      signal_transport : String
      #ow the server should signal to heat with the deployment output values. CFN_SIGNAL will allow an HTTP POST to a CFN keypair signed URL. HEAT_SIGNAL will allow calls to the Heat API resource-signal using the provided keystone credentials. NO_SIGNAL will result in the resource going to the COMPLETE state without waiting for any signal.
      #pdates cause replacement.
      #ptional property, defaults to “CFN_SIGNAL”.
      #llowed values: CFN_SIGNAL, HEAT_SIGNAL, NO_SIGNAL
    Attributes:
      deploy_status_code: String
      #eturned status code from the configuration execution
      deploy_stderr: String
      #aptured stderr from the configuration execution.
      deploy_stdout: String
      #aptured stdout from the configuration execution.
  "OS::Heat::UpdateWaitConditionHandle" :
    Properties: {}
  "OS::Heat::WaitCondition" :
    Properties:
      count : Number
      #The number of success signals that must be received before the stack creation process continues.
      #Can be updated without replacement.
      #Optional property, defaults to “1”.
      #The value must be at least 1.
      handle : String
      #A reference to the wait condition handle used to signal this wait condition.
      #Updates cause replacement.
      #Required property.
      timeout : Number
      #The number of seconds to wait for the correct number of signals to arrive.
      #Updates cause replacement.
      #Required property.
      #The value must be in the range 1 to 43200.
    Attributes:
      data: String
      #JSON serialized dict containing data associated with wait condition signals sent to the handle.
  "OS::Neutron::ExtraRoute" :
    Properties:
      destination : String
      #Network in CIDR notation.
      #Updates cause replacement.
      #Required property.
      nexthop : String
      #Nexthop IP address.
      #Updates cause replacement.
      #Required property.
      router_id : String
      #The router id.
      #Updates cause replacement.
      #Required property.
  "OS::Neutron::Firewall" :
    Properties:
      admin_state_up : Boolean
      #Administrative state of the firewall. If false (down), firewall does not forward packets and will drop all traffic to/from VMs behind the firewall.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      description : String
      #Description for the firewall.
      #Can be updated without replacement.
      #Optional property.
      firewall_policy_id : String
      #The ID of the firewall policy that this firewall is associated with.
      #Can be updated without replacement.
      #Required property.
      name : String
      #Name for the firewall.
      #Can be updated without replacement.
      #Optional property.
    Attributes:
      admin_state_up: String
      #The administrative state of the firewall.
      description: String
      #Description of the firewall.
      firewall_policy_id: String
      #Unique identifier of the firewall policy used to create the firewall.
      name: String
      #Name for the firewall.
      show: String
      #All attributes.
      status: String
      #The status of the firewall.
      tenant_id: String
      #Id of the tenant owning the firewall.
  "OS::Neutron::FirewallPolicy" :
    Properties:
      audited : Boolean
      #Whether this policy should be audited. When set to True, each time the firewall policy or the associated firewall rules are changed, this attribute will be set to False and will have to be explicitly set to True through an update operation.
      #Can be updated without replacement.
      #Optional property, defaults to “False”.
      description : String
      #Description for the firewall policy.
      #Can be updated without replacement.
      #Optional property.
      firewall_rules : [ String ]
      #An ordered list of firewall rules to apply to the firewall.
      #Can be updated without replacement.
      #Required property.
      name : String
      # Name for the firewall policy.
      # Can be updated without replacement.
      # Optional property.
      shared : Boolean
      #Whether this policy should be shared across all tenants.
      #Can be updated without replacement.
      #Optional property, defaults to “False”.
    Attributes:
      audited: String
      #Audit status of this firewall policy.
      description: String
      #Description of the firewall policy.
      firewall_rules: String
      #List of firewall rules in this firewall policy.
      name: String
      #Name for the firewall policy.
      shared: String
      #Shared status of this firewall policy.
      tenant_id: String
      #Id of the tenant owning the firewall policy.
  "OS::Neutron::FirewallRule" :
    #A resource for the FirewallRule resource in Neutron FWaaS.
    Properties:
      action : String
      #Action to be performed on the traffic matching the rule.
      #Can be updated without replacement.
      #Optional property, defaults to “deny”.
      #Allowed values: allow, deny
      description : String
      #Description for the firewall rule.
      #Can be updated without replacement.
      #Optional property.
      destination_ip_address : String
      #Destination IP address or CIDR.
      #Can be updated without replacement.
      #Optional property.
      destination_port : String
      #Destination port number or a range.
      #Can be updated without replacement.
      #Optional property.
      enabled : Boolean
      #Whether this rule should be enabled.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      ip_version : String
      #Internet protocol version.
      #Can be updated without replacement.
      #Optional property, defaults to “4”.
      #Allowed values: 4, 6
      name : String
      #Name for the firewall rule.
      #Can be updated without replacement.
      #Optional property.
      protocol : String
      #Protocol for the firewall rule.
      #Can be updated without replacement.
      #Optional property.
      #Allowed values: tcp, udp, icmp, None
      shared : Boolean
      #Whether this rule should be shared across all tenants.
      #Can be updated without replacement.
      #Optional property, defaults to “False”.
      source_ip_address : String
      #Source IP address or CIDR.
      #Can be updated without replacement.
      #Optional property.
      source_port : String
      #Source port number or a range.
      #Can be updated without replacement.
      #Optional property.
    Attributes:
      action: String
      #Allow or deny action for this firewall rule.
      description: String
      #Description of the firewall rule.
      destination_ip_address: String
      #Destination ip_address for this firewall rule.
      destination_port: String
      #Destination port range for this firewall rule.
      enabled: String
      #Indicates whether this firewall rule is enabled or not.
      firewall_policy_id: String
      #Unique identifier of the firewall policy to which this firewall rule belongs.
      ip_version: String
      #Ip_version for this firewall rule.
      name: String
      #Name for the firewall rule.
      position: String
      #Position of the rule within the firewall policy.
      protocol: String
      #Protocol value for this firewall rule.
      shared: String
      #Shared status of this firewall rule.
      source_ip_address: String
      #Source ip_address for this firewall rule.
      source_port: String
      #Source port range for this firewall rule.
      tenant_id: String
      #Id of the tenant owning the firewall.
  "OS::Neutron::FloatingIP" :
    Properties:
      fixed_ip_address : String
      #IP address to use if the port has multiple addresses.
      #Updates cause replacement.
      #Optional property.
      floating_network : String
      #Network to allocate floating IP from.
      #Updates cause replacement.
      #Optional property.
      port_id : String
      #ID of an existing port with at least one IP address to associate with this floating IP.
      #Updates cause replacement.
      #Optional property.
      value_specs : JSON
      #Extra parameters to include in the “floatingip” object in the creation request. Parameters are often specific to installed hardware or extensions.
      #Updates cause replacement.
      #Optional property, defaults to “{}”.
      floating_network_id : String
      #Note DEPRECATED - Use property floating_network.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      fixed_ip_address: String
      #IP address of the associated port, if specified.
      floating_ip_address: String
      #The allocated address of this IP.
      floating_network_id: String
      #ID of the network in which this IP is allocated.
      port_id: String
      #ID of the port associated with this IP.
      router_id: String
      #ID of the router used as gateway, set when associated with a port.
      show: String
      #All attributes.
      tenant_id: String
      #The tenant owning this floating IP.
  "OS::Neutron::FloatingIPAssociation" :
    Properties:
      fixed_ip_address : String
      #IP address to use if the port has multiple addresses.
      #Can be updated without replacement.
      #Optional property.
      floatingip_id : String
      #ID of the floating IP to associate.
      #Can be updated without replacement.
      #Required property.
      port_id : String
      #ID of an existing port with at least one IP address to associate with this floating IP.
      #Can be updated without replacement.
      #Required property.
  "OS::Neutron::HealthMonitor" :
    #A resource for managing health monitors for load balancers in Neutron.
    Properties:
      admin_state_up : Boolean
      #The administrative state of the health monitor.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      delay : Integer
      #The minimum time in seconds between regular connections of the member.
      #Can be updated without replacement.
      #Required property.
      expected_codes : String
      #The list of HTTP status codes expected in response from the member to declare it healthy.
      #Can be updated without replacement.
      #Optional property.
      http_method : String
      #The HTTP method used for requests by the monitor of type HTTP.
      #Can be updated without replacement.
      #Optional property.
      max_retries : Integer
      #Number of permissible connection failures before changing the member status to INACTIVE.
      #Can be updated without replacement.
      #Required property.
      timeout : Integer
      #Maximum number of seconds for a monitor to wait for a connection to be established before it times out.
      #Can be updated without replacement.
      #Required property.
      type : String
      #One of predefined health monitor types.
      #Updates cause replacement.
      #Required property.
      #Allowed values: PING, TCP, HTTP, HTTPS
      url_path : String
      #The HTTP path used in the HTTP request used by the monitor to test a member health.
      #Can be updated without replacement.
      #Optional property.
    Attributes:
      admin_state_up: String
      #The administrative state of this health monitor.
      delay: String
      #The minimum time in seconds between regular connections of the member.
      expected_codes: String
      #The list of HTTP status codes expected in response from the member to declare it healthy.
      http_method: String
      #The HTTP method used for requests by the monitor of type HTTP.
      max_retries: String
      #Number of permissible connection failures before changing the member status to INACTIVE.
      show: String
      #All attributes.
      tenant_id: String
      #Tenant owning the health monitor.
      timeout: String
      #Maximum number of seconds for a monitor to wait for a connection to be established before it times out.
      type: String
      #One of predefined health monitor types.
      url_path: String
      #The HTTP path used in the HTTP request used by the monitor to test a member health.
  "OS::Neutron::IKEPolicy" :
    Properties:
      auth_algorithm : String
      #Authentication hash algorithm for the ike policy.
      #Updates cause replacement.
      #Optional property, defaults to “sha1”. Allowed values: sha1
      description : String
      #Description for the ike policy.
      #Can be updated without replacement.
      #Optional property.
      encryption_algorithm : String
      #Encryption algorithm for the ike policy.
      #Updates cause replacement.
      #Optional property, defaults to “aes-128”. Allowed values: 3des, aes-128, aes-192, aes-256
      ike_version : String
      #Version for the ike policy.
      #Updates cause replacement.
      #Optional property, defaults to “v1”. Allowed values: v1, v2
      lifetime : IKEPolicyLifetimeMap
      #Safety assessment lifetime configuration for the ike policy.
      #Updates cause replacement.
      #Optional property.
      name : String
      #Name for the ike policy.
      #Can be updated without replacement.
      #Optional property.
      pfs : String
      #Perfect forward secrecy in lowercase for the ike policy.
      #Updates cause replacement.
      #Optional property, defaults to “group5”. Allowed values: group2, group5, group14
      phase1_negotiation_mode : String
      #Negotiation mode for the ike policy.
      #Updates cause replacement.
      #Optional property, defaults to “main”. Allowed values: main
    Attributes:
      auth_algorithm: String
      #The authentication hash algorithm used by the ike policy.
      description: String
      #The description of the ike policy.
      encryption_algorithm: String
      #The encryption algorithm used by the ike policy.
      ike_version: String
      #The version of the ike policy.
      lifetime: String
      #The safety assessment lifetime configuration for the ike policy.
      name: String
      #The name of the ike policy.
      pfs: String
      #The perfect forward secrecy of the ike policy.
      phase1_negotiation_mode: String
      #The negotiation mode of the ike policy.
      tenant_id: String
      #The unique identifier of the tenant owning the ike policy.
  "OS::Neutron::IPsecPolicy" :
    Properties:
      auth_algorithm : String
      #Authentication hash algorithm for the ipsec policy.
      #Updates cause replacement.
      #Optional property, defaults to “sha1”. Allowed values: sha1
      description : String
      #Description for the ipsec policy.
      #Can be updated without replacement.
      #Optional property.
      encapsulation_mode : String
      #Encapsulation mode for the ipsec policy.
      #Updates cause replacement.
      #Optional property, defaults to “tunnel”. Allowed values: tunnel, transport
      encryption_algorithm : String
      #Encryption algorithm for the ipsec policy.
      #Updates cause replacement.
      #Optional property, defaults to “aes-128”. Allowed values: 3des, aes-128, aes-192, aes-256
      lifetime : IPsecPolicyLifetimeMap
      #Safety assessment lifetime configuration for the ipsec policy.
      #Updates cause replacement.
      #Optional property.
      name : String
      #Name for the ipsec policy.
      #Can be updated without replacement.
      #Optional property.
      pfs : String
      #Perfect forward secrecy for the ipsec policy.
      #Updates cause replacement.
      #Optional property, defaults to “group5”. Allowed values: group2, group5, group14
      transform_protocol : String
      #Transform protocol for the ipsec policy.
      #Updates cause replacement.
      #Optional property, defaults to “esp”. Allowed values: esp, ah, ah-esp
    Attributes:
      auth_algorithm: String
      #The authentication hash algorithm of the ipsec policy.
      description: String
      #The description of the ipsec policy.
      encapsulation_mode: String
      #The encapsulation mode of the ipsec policy.
      encryption_algorithm: String
      #The encryption algorithm of the ipsec policy.
      lifetime: String
      #The safety assessment lifetime configuration of the ipsec policy.
      name: String
      #The name of the ipsec policy.
      pfs: String
      #The perfect forward secrecy of the ipsec policy.
      tenant_id: String
      #The unique identifier of the tenant owning the ipsec policy.
      transform_protocol: String
      #The transform protocol of the ipsec policy.
  "OS::Neutron::IPsecSiteConnection" :
    #A resource for IPsec site connection in Neutron.
    Properties:
      admin_state_up : Boolean
      #Administrative state for the ipsec site connection.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      description : String
      #Description for the ipsec site connection.
      #Can be updated without replacement.
      #Optional property.
      dpd : IPSecDPDMap
      #Dead Peer Detection protocol configuration for the ipsec site connection.
      #Updates cause replacement.
      #Optional property.
      ikepolicy_id : String
      #Unique identifier for the ike policy associated with the ipsec site connection.
      #Updates cause replacement.
      #Required property.
      initiator : String
      #Initiator state in lowercase for the ipsec site connection.
      #Updates cause replacement.
      #Optional property, defaults to “bi-directional”. Allowed values: bi-directional, response-only
      ipsecpolicy_id : String
      #Unique identifier for the ipsec policy associated with the ipsec site connection.
      #Updates cause replacement.
      #Required property.
      mtu : Integer
      #Maximum transmission unit size (in bytes) for the ipsec site connection.
      #Updates cause replacement.
      #Optional property, defaults to “1500”.
      name : String
      #Name for the ipsec site connection.
      #Can be updated without replacement.
      #Optional property.
      peer_address : String
      #Remote branch router public IPv4 address or IPv6 address or FQDN.
      #Updates cause replacement.
      #Required property.
      peer_cidrs : [ String ]
      #Remote subnet(s) in CIDR format.
      #Updates cause replacement.
      #Required property.
      peer_id : String
      #Remote branch router identity.
      #Updates cause replacement.
      #Required property.
      psk : String
      #Pre-shared key string for the ipsec site connection.
      #Updates cause replacement.
      #Required property.
      vpnservice_id : String
      #Unique identifier for the vpn service associated with the ipsec site connection.
      #Updates cause replacement.
      #Required property.
    Attributes:
      admin_state_up: String
      #The administrative state of the ipsec site connection.
      auth_mode: String
      #The authentication mode of the ipsec site connection.
      description: String
      #The description of the ipsec site connection.
      dpd: String
      #The dead peer detection protocol configuration of the ipsec site connection.
      ikepolicy_id: String
      #The unique identifier of ike policy associated with the ipsec site connection.
      initiator: String
      #The initiator of the ipsec site connection.
      ipsecpolicy_id: String
      #The unique identifier of ipsec policy associated with the ipsec site connection.
      mtu: String
      #The maximum transmission unit size (in bytes) of the ipsec site connection.
      name: String
      #The name of the ipsec site connection.
      peer_address: String
      #The remote branch router public IPv4 address or IPv6 address or FQDN.
      peer_cidrs: String
      #The remote subnet(s) in CIDR format of the ipsec site connection.
      peer_id: String
      #The remote branch router identity of the ipsec site connection.
      psk: String
      #The pre-shared key string of the ipsec site connection.
      route_mode: String
      #The route mode of the ipsec site connection.
      status: String
      #The status of the ipsec site connection.
      tenant_id: String
      #The unique identifier of the tenant owning the ipsec site connection.
      vpnservice_id: String
      #The unique identifier of vpn service associated with the ipsec site connection.

  "OS::Neutron::LoadBalancer" :
    Properties:
      members : [ String ]
      #The list of Nova server IDs load balanced.
      #Can be updated without replacement.
      #Optional property, defaults to “[]”.
      pool_id : String
      #The ID of the load balancing pool.
      #Can be updated without replacement.
      #Required property.
      protocol_port : Integer
      #Port number on which the servers are running on the members.
      #Updates cause replacement.
      #Required property.
  "OS::Neutron::MeteringLabel" :
    Properties:
      description : String
      #Description of the metering label.
      #Updates cause replacement.
      #Optional property.
      name : String
      #Name of the metering label.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      description: String
      #Description of the metering label.
      name: String
      #Name of the metering label.
  "OS::Neutron::MeteringRule" :
    Properties:
      direction : String
      #The direction in which metering rule is applied, either ingress or egress.
      #Updates cause replacement.
      #Optional property, defaults to “ingress”.
      #Allowed values: ingress, egress
      excluded : Boolean
      #Specify whether the remote_ip_prefix will be excluded or not from traffic counters of the metering label. For example to not count the traffic of a specific IP address of a range.
      #Updates cause replacement.
      #Optional property, defaults to “False”.
      metering_label_id : String
      #The metering label ID to associate with this metering rule.
      #Updates cause replacement.
      #Required property.
      remote_ip_prefix : String
      #Indicates remote IP prefix to be associated with this metering rule.
      #Updates cause replacement.
      #Required property.
    Attributes:
      direction: String
      #The direction in which metering rule is applied.
      excluded: String
      #Exclude state for cidr.
      metering_label_id: String
      #The metering label ID to associate with this metering rule.
      remote_ip_prefix: String
      #CIDR to be associated with this metering rule.
  "OS::Neutron::Net" :
    Properties:
      admin_state_up : Boolean
      #A boolean value specifying the administrative status of the network.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      dhcp_agent_ids : List
      #The IDs of the DHCP agent to schedule the network. Note that the default policy setting in Neutron restricts usage of this property to administrative users only.
      #Can be updated without replacement.
      #Optional property.
      name : String
      #A string specifying a symbolic name for the network, which is not required to be unique.
      #Can be updated without replacement.
      #Optional property
      shared : Boolean
      #Whether this network should be shared across all tenants. Note that the default policy setting restricts usage of this attribute to administrative users only.
      #Can be updated without replacement.
      #Optional property, defaults to “False”.
      tenant_id : String
      #The ID of the tenant which will own the network. Only administrative users can set the tenant identifier; this cannot be changed using authorization policies.
      #Updates cause replacement.
      #Optional property.
      value_specs : JSON
      #Extra parameters to include in the “network” object in the creation request. Parameters are often specific to installed hardware or extensions.
      #Can be updated without replacement.
      #Optional property, defaults to “{}”.
    Attributes:
      admin_state_up: String
      #The administrative status of the network.
      name: String
      #The name of the network.
      show: String
      #All attributes.
      status: String
      #The status of the network.
      subnets: String
      #Subnets of this network.
      tenant_id: String
      #The tenant owning this network.
  "OS::Neutron::NetworkGateway" :
    Properties:
      connections : [ NetworkGatewayConnectionMap ]
      #Connection info for this network gateway.
      #Can be updated without replacement.
      #Optional property, defaults to “{}”.
      devices : [ NetworkGatewayDeviceMap ]
      #Device info for this network gateway.
      #Can be updated without replacement.
      #Required property.
      #The length must be at least 1.
      name : String
      #The name of the network gateway.
      #Can be updated without replacement.
      #Optional property.
    Attributes:
      default: String
      #A boolean value of default flag.
      show: String
      #All attributes.
  "OS::Neutron::Pool" :
    Properties:
      admin_state_up : Boolean
      #The administrative state of this pool.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      description : String
      #Description of the pool.
      #Can be updated without replacement.
      #Optional property.
      lb_method : String
      #The algorithm used to distribute load between the members of the pool.
      #Can be updated without replacement.
      #Required property.
      #Allowed values: ROUND_ROBIN, LEAST_CONNECTIONS, SOURCE_IP
      monitors : [ String ]
      #List of health monitors associated with the pool.
      #Can be updated without replacement.
      #Optional property, defaults to “[]”.
      name : String
      #Name of the pool.
      #Updates cause replacement.
      #Optional property.
      protocol : String
      #Protocol for balancing.
      #Updates cause replacement.
      #Required property.
      #Allowed values: TCP, HTTP, HTTPS
      subnet : String
      #The subnet for the port on which the members of the pool will be connected.
      #Updates cause replacement.
      #Optional property.
      vip : NeutronPoolVipMap
      #IP address and port of the pool.
      #Updates cause replacement.
      #Required property.
      subnet_id : String
      #Note DEPRECATED - Use property subnet.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      admin_state_up: String
      #The administrative state of this pool.
      description: String
      #Description of the pool.
      lb_method: String
      #The algorithm used to distribute load between the members of the pool.
      name: String
      #Name of the pool.
      protocol: String
      #Protocol to balance.
      subnet_id: String
      #The subnet for the port on which the members of the pool will be connected.
      tenant_id: String
      #Tenant owning the pool.
      vip: String
      #Vip associated with the pool.
  "OS::Neutron::PoolMember" :
    Properties:
      address : String
      #IP address of the pool member on the pool network.
      #Updates cause replacement.
      #Required property.
      admin_state_up : Boolean
      #The administrative state of the pool member.
      #Updates cause replacement.
      #Optional property, defaults to “True”.
      pool_id : String
      #The ID of the load balancing pool.
      #Can be updated without replacement.\
      #Required property.
      protocol_port : Number
      #TCP port on which the pool member listens for requests or connections.
      #Updates cause replacement.
      #Required property.
      #The value must be in the range 0 to 65535.
      weight : Number
      #Weight of pool member in the pool (default to 1).
      #Can be updated without replacement.
      #Optional property.
      #The value must be in the range 0 to 256.
    Attributes:
      address: String
      #IP address of the pool member.
      admin_state_up: String
      #The administrative state of this pool member.
      pool_id: String
      #The ID of the load balancing pool.
      protocol_port: String
      #TCP port on which the pool member listens for requests or connections.
      show: String
      #All attributes.
      tenant_id: String
      #Tenant owning the pool member.
      weight: String
      #Weight of the pool member in the pool.
  "OS::Neutron::Port" :
    Properties:
      admin_state_up : Boolean
      #The administrative state of this port.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      allowed_address_pairs : [ AllowedAddressPairMap ]
      #Additional MAC/IP address pairs allowed to pass through the port.
      #Updates cause replacement.
      #Optional property.
      #Updates cause replacement.
      device_id : String
      #Device ID of this port.
      #Can be updated without replacement.
      #Optional property.
      device_owner : String
      #Name of the network owning the port. The value is typically network:floatingip or network:router_interface or network:dhcp
      #Can be updated without replacement.
      #Optional property.
      fixed_ips : [ PortFixedIPMap ]
      #Desired IPs for this port.
      #Can be updated without replacement.
      #Optional property, defaults to “[]”.
      #Updates cause replacement.
      mac_address : String
      #MAC address to give to this port.
      #Updates cause replacement.
      #Optional property.
      name : String
      #A symbolic name for this port.
      #Can be updated without replacement.
      #Optional property.
      network : String
      #Network this port belongs to.
      #Updates cause replacement.
      #Optional property.
      security_groups : List
      #Security group IDs to associate with this port.
      #Can be updated without replacement.
      #Optional property, defaults to “[]”.
      value_specs : JSON
      #Extra parameters to include in the “port” object in the creation request.
      #Updates cause replacement.
      #Optional property, defaults to “{}”.
      network_id : String
      #Note DEPRECATED - Use property network.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      admin_state_up: String
      #The administrative state of this port.
      allowed_address_pairs: String
      #Additional MAC/IP address pairs allowed to pass through a port.
      device_id: String
      #Unique identifier for the device.
      device_owner: String
      #Name of the network owning the port.
      fixed_ips: String
      #Fixed IP addresses.
      mac_address: String
      #MAC address of the port.
      name: String
      #Friendly name of the port.
      network_id: String
      #Unique identifier for the network owning the port.
      security_groups: String
      #A list of security groups for the port.
      show: String
      #All attributes.
      status: String
      #The status of the port.
      tenant_id: String
      #Tenant owning the port.
  "OS::Neutron::ProviderNet" :
    Properties:
      admin_state_up : Boolean
      #A boolean value specifying the administrative status of the network.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      name : String
      #A string specifying a symbolic name for the network, which is not required to be unique.
      #Can be updated without replacement.
      #Optional property.
      network_type : String
      #A string specifying the provider network type for the network.
      #Can be updated without replacement.
      #Required property.
      #Allowed values: vlan, flat
      physical_network : String
      #A string specifying physical network mapping for the network.
      #Can be updated without replacement.
      #Required property.
      segmentation_id : String
      #A string specifying the segmentation id for the network.
      #Can be updated without replacement.
      #Optional property.
      shared : Boolean
      #Whether this network should be shared across all tenants.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
    Attributes:
      show: String
      #All attributes.
      status: String
      #The status of the network.
      subnets: String
      #Subnets of this network.
  "OS::Neutron::Router" :
    Properties:
      admin_state_up : Boolean
      #The administrative state of the router.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      external_gateway_info : RouterExternalGatewayInfo
      #External network gateway configuration for a router.
      #Can be updated without replacement.
      #Optional property.
      l3_agent_id : String
      #ID of the L3 agent. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.
      #Can be updated without replacement.
      #Optional property.
      name : String
      #The name of the router.
      #Can be updated without replacement.
      #Optional property.
      value_specs : JSON
      #Extra parameters to include in the creation request.
      #Can be updated without replacement.
      #Optional property, defaults to “{}”.
    Attributes:
      admin_state_up: String
      #Administrative state of the router.
      external_gateway_info: String
      #Gateway network for the router.
      name: String
      #Friendly name of the router.
      show: String
      #All attributes.
      status: String
      #The status of the router.
      tenant_id: String
      #Tenant owning the router.
  #"OS::Neutron::RouterGateway" : #Deprecated
  "OS::Neutron::RouterInterface" :
    Properties:
      port_id : String
      #The port id, either subnet or port_id should be specified.
      #Updates cause replacement.
      #Optional property.
      router_id : String
      #The router id.
      #Updates cause replacement.
      #Required property.
      subnet : String
      #The subnet, either subnet or port_id should be specified.
      #Updates cause replacement.
      #Optional property.
      subnet_id : String
      #Note DEPRECATED - Use property subnet.
      #Updates cause replacement.
      #Optional property.
  "OS::Neutron::SecurityGroup" :
    Properties:
      description : String
      #Description of the security group.
      #Can be updated without replacement.
      #Optional property.
      name : String
      #A string specifying a symbolic name for the security group, which is not required to be unique.
      #Can be updated without replacement.
      #Optional property.
      rules : [ SecurityGroupRuleMap ]
      #List of security group rules.
      #Can be updated without replacement.
      #Optional property, defaults to “[]”.
  "OS::Neutron::Subnet" :
    Properties:
      allocation_pools : [ SubnetAllocationPoolMap ]
      #The start and end addresses for the allocation pools.
      #Updates cause replacement.
      #Optional property.
      cidr : String
      #The CIDR.
      #Updates cause replacement.
      #Required property.
      dns_nameservers : List
      #A specified set of DNS name servers to be used.
      #Can be updated without replacement.
      #Optional property, defaults to “[]”.
      enable_dhcp : Boolean
      #Set to true if DHCP is enabled and false if DHCP is disabled.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      gateway_ip : String
      #The gateway IP address.
      #Can be updated without replacement.
      #Optional property.
      host_routes : [ SubnetHostRouteMap ]
      #Updates cause replacement.
      #Optional property.
      #Updates cause replacement.
      ip_version : Integer
      #The IP version, which is 4 or 6.
      #Updates cause replacement.
      #Optional property, defaults to “4”. Allowed values: 4, 6
      name : String
      #The name of the subnet.
      #Can be updated without replacement.
      #Optional property.
      network : String
      #The ID of the attached network.
      #Updates cause replacement.
      #Optional property.
      tenant_id : String
      #The ID of the tenant who owns the network. Only administrative users can specify a tenant ID other than their own.
      #Updates cause replacement.
      #Optional property.
      value_specs : JSON
      #Extra parameters to include in the creation request.
      #Can be updated without replacement.
      #Optional property, defaults to “{}”.
      network_id : String
      #Note DEPRECATED - Use property network.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      allocation_pools: String
      #Ip allocation pools and their ranges.
      cidr: String
      #CIDR block notation for this subnet.
      dns_nameservers: String
      #List of dns nameservers.
      enable_dhcp: String
      #‘true’ if DHCP is enabled for this subnet; ‘false’ otherwise.
      gateway_ip: String
      #Ip of the subnet’s gateway.
      host_routes: String
      #Additional routes for this subnet.
      ip_version: String
      #Ip version for the subnet.
      name: String
      #Friendly name of the subnet.
      network_id: String
      #Parent network of the subnet.
      show: String
      #All attributes.
      tenant_id: String
      #Tenant owning the subnet.
  "OS::Neutron::VPNService" :
    Properties:
      admin_state_up : Boolean
      #Administrative state for the vpn service.
      #Can be updated without replacement.
      #Optional property, defaults to “True”.
      description : String
      #Description for the vpn service.
      #Can be updated without replacement.
      #Optional property.
      name : String
      #Name for the vpn service.
      #Can be updated without replacement.
      #Optional property.
      router_id : String
      #Unique identifier for the router to which the vpn service will be inserted.
      #Updates cause replacement.
      #Required property.
      subnet : String
      #Subnet in which the vpn service will be created.
      #Updates cause replacement.
      #Optional property.
      subnet_id : String
      #Note DEPRECATED - Use property subnet.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      admin_state_up: String
      #The administrative state of the vpn service.
      description: String
      #The description of the vpn service.
      name: String
      #The name of the vpn service.
      router_id: String
      #The unique identifier of the router to which the vpn service was inserted.
      show: String
      #All attributes.
      status: String
      #The status of the vpn service.
      subnet_id: String
      #The unique identifier of the subnet in which the vpn service was created.
      tenant_id: String
      #The unique identifier of the tenant owning the vpn service.
  "OS::Nova::Flavor" :
    Properties:
      disk : Integer
      #Size of local disk in GB. Set the value to 0 to remove limit on disk size.
      #Updates cause replacement.
      #Required property.
      ephemeral : Integer
      #Size of a secondary ephemeral data disk in GB.
      #Updates cause replacement.
      #Optional property, defaults to “0”.
      extra_specs : JSON
      #Key/Value pairs to extend the capabilities of the flavor.
      #Can be updated without replacement.
      #Optional property.
      ram : Integer
      #Memory in MB for the flavor.
      #Updates cause replacement.
      #Required property.
      rxtx_factor : Number
      #RX/TX factor.
      #Updates cause replacement.
      #Optional property, defaults to “1.0”.
      swap : Integer
      #Swap space in MB.
      #Updates cause replacement.
      #Optional property, defaults to “0”.
      vcpus : Integer
      #Number of VCPUs for the flavor.
      #Updates cause replacement.
      #Required property.
  "OS::Nova::FloatingIP" :
    Properties:
      pool : String
      #Allocate a floating IP from a given floating IP pool.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      ip: String
      #Allocated floating IP address.
      pool: String
      #Pool from which floating IP is allocated.
  "OS::Nova::FloatingIPAssociation" :
    Properties:
      floating_ip : String
      #ID of the floating IP to assign to the server.
      #Can be updated without replacement.
      #Required property.
      server_id : String
      #Server to assign floating IP to.
      #Can be updated without replacement.
      #Required property.
  "OS::Nova::KeyPair" :
    Properties:
      name : String
      #The name of the key pair.
      #Updates cause replacement.
      #Required property.
      public_key : String
      #The optional public key. This allows users to supply the public key from a pre-existing key pair. If not supplied, a new key pair will be generated.
      #Updates cause replacement.
      #Optional property.
      save_private_key : Boolean
      #True if the system should remember a generated private key; False otherwise.
      #Updates cause replacement.
      #Optional property, defaults to “False”.
    Attributes:
      private_key: String
      #The private key if it has been saved.
      public_key: String
      #The public key.
  "OS::Nova::Server" :
    Properties:
      admin_pass : String
      #The administrator password for the server.
      #Can be updated without replacement.
      #Optional property.
      availability_zone : String
      #Name of the availability zone for server placement.
      #Updates cause replacement.
      #Optional property.
      block_device_mapping : [ ServerBlockDeviceMap ]
      #Block device mappings for this server.
      #Updates cause replacement.
      #Optional property.
      config_drive : Boolean
      #If True, enable config drive on the server.
      #Updates cause replacement.
      #Optional property.
      diskConfig : String
      #Control how the disk is partitioned when the server is created.
      #Updates cause replacement.
      #Optional property. Allowed values: AUTO, MANUAL
      flavor : String
      #The ID or name of the flavor to boot onto.
      #Can be updated without replacement.
      #Required property.
      flavor_update_policy : String
      #Policy on how to apply a flavor update; either by requesting a server resize or by replacing the entire server.
      #Can be updated without replacement.
      #Optional property, defaults to “RESIZE”. Allowed values: RESIZE, REPLACE
      image : String
      #The ID or name of the image to boot with.
      #Can be updated without replacement.
      #Optional property. Value must be of type glance.image
      image_update_policy : String
      #Policy on how to apply an image-id update; either by requesting a server rebuild or by replacing the entire server
      #Can be updated without replacement.
      #Optional property, defaults to “REPLACE”. Allowed values: REBUILD, REPLACE, REBUILD_PRESERVE_EPHEMERAL
      key_name : String
      #Name of keypair to inject into the server.
      #Updates cause replacement.
      #Optional property. Value must be of type nova.keypair
      metadata : JSON
      #Arbitrary key/value metadata to store for this server. Both keys and values must be 255 characters or less. Non-string values will be serialized to JSON (and the serialized string must be 255 characters or less).
      #Can be updated without replacement.
      #Optional property.
      name : String
      #Server name.
      #Can be updated without replacement.
      #Optional property.
      networks : [ ServerNetworkMap ]
      #An ordered list of nics to be added to this server, with information about connected networks, fixed ips, port etc.
      #Can be updated without replacement.
      #Optional property.
      personality : JSON
      #A map of files to create/overwrite on the server upon boot. Keys are file names and values are the file contents.
      #Updates cause replacement.
      #Optional property, defaults to “{}”.
      reservation_id : String
      #A UUID for the set of servers being requested.
      #Updates cause replacement.
      #Optional property.
      scheduler_hints : JSON
      #Arbitrary key-value pairs specified by the client to help boot a server.
      #Updates cause replacement.
      #Optional property.
      security_groups : List
      #List of security group names or IDs. Cannot be used if neutron ports are associated with this server; assign security groups to the ports instead.
      #Updates cause replacement.
      #Optional property, defaults to “[]”.
      software_config_transport : String
      #How the server should receive the metadata required for software configuration. POLL_SERVER_CFN will allow calls to the cfn API action DescribeStackResource authenticated with the provided keypair. POLL_SERVER_HEAT will allow calls to the Heat API resource-show using the provided keystone credentials.
      #Updates cause replacement.
      #Optional property, defaults to “POLL_SERVER_CFN”. Allowed values: POLL_SERVER_CFN, POLL_SERVER_HEAT
      user_data : String
      #User data script to be executed by cloud-init.
      #Updates cause replacement.
      #Optional property, defaults to “”.
      user_data_format : String
      #How the user_data should be formatted for the server. For HEAT_CFNTOOLS, the user_data is bundled as part of the heat-cfntools cloud-init boot configuration data. For RAW the user_data is passed to Nova unmodified. For SOFTWARE_CONFIG user_data is bundled as part of the software config data, and metadata is derived from any associated SoftwareDeployment resources.
      #Updates cause replacement.
      #Optional property, defaults to “HEAT_CFNTOOLS”. Allowed values: HEAT_CFNTOOLS, RAW, SOFTWARE_CONFIG
      admin_user : String
      #Note DEPRECATED
      #Name of the administrative user to use on the server. This property will be removed from Juno in favor of the default cloud-init user set up for each image (e.g. “ubuntu” for Ubuntu 12.04+, “fedora” for Fedora 19+ and “cloud-user” for CentOS/RHEL 6.5).
      #Updates cause replacement. Optional property.
    Attributes:
      accessIPv4: String
      #The manually assigned alternative public IPv4 address of the server.
      accessIPv6: String
      #The manually assigned alternative public IPv6 address of the server.
      addresses: String
      #A dict of all network addresses with corresponding port_id.
      first_address: String
      #Note DEPRECATED - Use the networks attribute instead of first_address. For example: “{get_attr: [<server name>, networks, <network name>, 0]}”
      #Convenience attribute to fetch the first assigned network address, or an empty string if nothing has been assigned at this time. Result may not be predictable if the server has addresses from more than one network.
      instance_name: String
      #AWS compatible instance name.
      name: String
      #Name of the server.
      networks: String
      #A dict of assigned network addresses of the form: {“public”: [ip1, ip2...], “private”: [ip3, ip4]}.
      show: String
      #A dict of all server details as returned by the API.
  "OS::Nova::ServerGroup" :
    #A resource for managing a Nova server group.
    Properties:
      name : String
      #Server Group name.
      #Updates cause replacement.
      #Optional property.
      policies : [ String ]
      #A list of string policies to apply.Defaults to anti-affinity.
      #Updates cause replacement.
      #Optional property, defaults to “[‘anti-affinity’]”. Allowed values: anti-affinity, affinity
      #Optional property.
  "OS::Swift::Container" :
    Properties:
      X_Account_Meta : JSON
      #A map of user-defined meta data to associate with the account. Each key in the map will set the header X-Account-Meta-{key} with the corresponding value.
      #Updates cause replacement.
      #Optional property, defaults to “{}”.
      X_Container_Meta : JSON
      #A map of user-defined meta data to associate with the container. Each key in the map will set the header X-Container-Meta-{key} with the corresponding value.
      #Updates cause replacement.
      #Optional property, defaults to “{}”.
      X_Container_Read : String
      #Specify the ACL permissions on who can read objects in the container.
      #Updates cause replacement.
      #Optional property.
      X_Container_Write : String
      #Specify the ACL permissions on who can write objects to the container.
      #Updates cause replacement.
      #Optional property.
      name : String
      #Name for the container. I not specified, a unique name will be generated.
      #Updates cause replacement.
      #Optional property.
    Attributes:
      BytesUsed: String
      #The number of bytes stored in the container.
      DomainName: String
      #The host from the container URL.
      HeadContainer: String
      #A map containing all headers for the container.
      ObjectCount: String
      #The number of objects stored in the container.
      RootURL: String
      #The parent URL of the container.
      WebsiteURL: String
      #The URL of the container.

  "OS::Trove::Instance" :
    Properties:
      availability_zone : String
      #Name of the availability zone for DB instance.
      #Updates cause replacement.
      #Optional property.
      databases : [ DatabaseMap ]
      #List of databases to be created on DB instance creation.
      #Updates cause replacement.
      #Optional property, defaults to “[]”.
      datastore_type : String
      #Name of registered datastore type.
      #Updates cause replacement.
      #Optional property. The length must be no greater than 255.
      datastore_version : String
      #Name of the registered datastore version. It must exist for provided datastore type. Defaults to using single active version. If several active versions exist for provided datastore type, explicit value for this parameter must be specified.
      #Updates cause replacement.
      #Optional property. The length must be no greater than 255.
      flavor : String
      #Reference to a flavor for creating DB instance.
      #Updates cause replacement.
      #Required property.
      name : String
      #Name of the DB instance to create.
      #Updates cause replacement.
      #Optional property. The length must be no greater than 255.
      restore_point : String
      #DB instance restore point.
      #Updates cause replacement.
      #Optional property.
      size : Integer
      #Database volume size in GB.
      #Updates cause replacement.
      #Required property. The value must be in the range 1 to 150.
      users : [ DatabaseUserMap ]
      #List of users to be created on DB instance creation.
      #Updates cause replacement.
      #Optional property, defaults to “[]”.
    Attributes:
      hostname: String
      #Hostname of the instance
      href: String
      #Api endpoint reference of the instance

  "AWS::AutoScaling::AutoScalingGroup" :
    Properties:
      AvailabilityZones: [ String ]
      Cooldown: Number
      DesiredCapacity: Integer
      HealthCheckGracePeriod: Integer
      HealthCheckType: String
      LaunchConfigurationName: String
      LoadBalancerNames: [ String ]
      MaxSize: Integer
      MinSize: Integer
      Tags: [ AutoScalingTags ]
      VPCZoneIdentifier: [ String ]
    Attributes:
      InstanceList: String
  "AWS::AutoScaling::LaunchConfiguration" :
    Properties:
      BlockDeviceMappings : String
      #Note Not implemented.
      ImageId : String
      #Glance image ID or name.
      #Updates cause replacement.
      #Required property.
      InstanceType : String
      #Nova instance type (flavor).
      #Updates cause replacement.
      #Required property.
      KernelId : String
      #Note Not implemented.
      KeyName : String
      #Optional Nova keypair name.
      #Updates cause replacement.
      #Optional property.
      NovaSchedulerHints : [ NovaSchedulerHintsMap ]
      #Scheduler hints to pass to Nova (Heat extension).
      #Updates cause replacement.
      #Optional property.
      RamDiskId : String
      #Note Not implemented.
      SecurityGroups : [ String ]
      #Security group names to assign.
      #Updates cause replacement.
      #Optional property.
      UserData : String
      #User data to pass to instance.
      #Updates cause replacement.
      #Optional property.
  "AWS::AutoScaling::ScalingPolicy" :
    Properties:
      AdjustmentType: String
      AutoScalingGroupName: String
      Cooldown: Number
      ScalingAdjustment: Number
    Attributes:
      AlarmUrl: String
  "AWS::CloudFormation::Stack" :
    Properties:
      TemplateURL: String
      TimeoutInMinutes: String
      Parameters: CloudFormationStackParameters
  "AWS::CloudFormation::WaitCondition" :
    Properties:
      Handle: String
      Timeout: String
      Count: Number
    Attributes:
      Data: String
  "AWS::CloudFormation::WaitConditionHandle" :
    Properties: {}
  "AWS::EC2::EIP" :
    Properties:
      InstanceId: String
      Domain: String
    Attributes:
      AllocationId: String
  "AWS::EC2::EIPAssociation" :
    Properties:
      InstanceId: String
      EIP: String
      AllocationId: String
      NetworkInterfaceId: String
  "AWS::EC2::Instance" :
    Properties:
      AvailabilityZone: String
      DisableApiTermination: String
      ImageId: String
      InstanceType: String
      KernelId: String
      KeyName: String
      Monitoring: Boolean
      NetworkInterfaces: [ EC2NetworkInterfaceMap ]
      NovaSchedulerHints: [ NovaSchedulerHintsMap ]
      PlacementGroupName: String
      PrivateIpAddress: String
      RamDiskId: String
      SecurityGroups: [String]
      SecurityGroupIds: [String]
      SourceDestCheck: Boolean
      SubnetId: String
      Tags: [ EC2Tag ]
      Tenancey: String
      UserData: String
      Volumes: [ EC2MountPoint ]
    Attributes:
      AvailabilityZone: String
      PrivateDnsName: String
      PublicDnsName: String
      PrivateIp: String
      PublicIp: String
  "AWS::EC2::InternetGateway" :
    Properties:
      Tags: [ EC2Tag ]
  "AWS::EC2::NetworkInterface" :
    Properties:
      Tags: [ EC2Tag ]
      GroupSet: [ String ]
      SubnetId: String
      PrivateIpAddress: String
      SourceDestCheck: Boolean
    Attributes:
      PrivateIpAddress: String
  "AWS::EC2::RouteTable" :
    Properties:
      VpcId: String
      Tags: [ EC2Tag ]
  "AWS::EC2::SecurityGroup" :
    Properties:
     GroupDescription: String
     SecurityGroupIngress: [ EC2SecurityGroupRule ]
     SecurityGroupEgress: [ EC2SecurityGroupRule ]
     VpcId: String
  "AWS::EC2::Subnet" :
    Properties:
      AvailabilityZone: String
      VpcId: String
      CidrBlock: String
      Tags: [ EC2Tag ]
  "AWS::EC2::SubnetRouteTableAssociation" :
    Properties:
      SubnetId: String
      RouteTableId: String
  "AWS::EC2::VPC" :
    Properties:
      CidrBlock: String
      InstanceTenancy: String
      Tags: [ EC2Tag ]
  "AWS::EC2::VPCGatewayAttachment" :
    Properties:
      InternetGatewayId: String
      VpcId: String
      VpnGatewayId: String
  "AWS::EC2::Volume" :
    Properties:
      AvailabilityZone: String
      Size: String
      SnapshotId: String
      Tags: [ EC2Tag ]
  "AWS::EC2::VolumeAttachment" :
    Properties:
      InstanceId: String
      VolumeId: String
      Device: String
  "AWS::ElasticLoadBalancing::LoadBalancer" :
    Properties:
      AvailabilityZones: [String]
      CrossZone: Boolean
      HealthCheck: HealthCheck
      Instances: [String]
      Listeners: [ Listener ]
      AppCookieStickinessPolicy: AppCookieStickinessPolicy
      LBCookieStickinessPolicy:  LBCookieStickinessPolicy
      SecurityGroups: [ String ]
      Subnets: [ String ]
    Attributes:
      CanonicalHostedZoneName: String
      CanonicalGostedZoneNameID: String
      DNSName: String
      SourceSecurityGroup.GroupName: String
      SourceSecurityGroup.OwnerAlias: String
  "AWS::IAM::AccessKey" :
    Properties:
      Serial: Integer
      Status: String
      UserName: String
    Attributes:
      SecretAccessKey: String
  "AWS::IAM::User" :
    Properties:
      Path: String
      Groups: [String]
      LoginProfile: String
      Policies: [ IAMEmbeddedPolicy ]
  "AWS::RDS::DBInstance" :
    Properties:
      DBSnapshotIdentifier: String
      AllocatedStorage: String
      DBInstanceClass: String
      DBName: String
      DBSecurityGroups: [ String ]
      Engine: String
      KeyName: String
      MasterUsername: String
      MasterUserPassword: String
      Port: String
    Attributes:
     Endpoint.Address: String
     Endpoint.Port: String
  "AWS::S3::Bucket" :
    Properties:
      AccessControl: String
      WebsiteConfiguration: S3WebsiteConfigurationMap
      Tags: [ EC2Tag ]
    Attributes:
      DomainName: String
      WebsiteUrl: String


Types:
  String:  String
  Boolean: Boolean
  JSON:    JSON
  Integer: Integer
  Number:  Number
  List:  [ String ]
  RollingUpdateMap:
    max_batch_size : Number
    # The maximum number of resources to replace at once.
    # Updates cause replacement.
    # Optional property, defaults to “1”.
    # The value must be at least 0.
    min_in_service : Number
    # The minimum number of resources in service while rolling updates are being executed.
    # Updates cause replacement.
    # Optional property, defaults to “0”.
    # The value must be at least 0.
    pause_time : Number
    # The number of seconds to wait between batches of updates.
    # Updates cause replacement.
    # Optional property, defaults to “0”.
    # The value must be at least 0.
  MultiPartMimeMap:
    config : String
    # Content of part to attach, either inline or by referencing the ID of another software config resource
    # Updates cause replacement.
    # Required property.
    filename : String
    # Optional filename to associate with part.
    # Updates cause replacement.
    # Optional property.
    subtype : String
    # Optional subtype to specify with the type.
    # Updates cause replacement.
    # Optional property.
    type : String
    # Whether the part content is text or multipart.
    # Updates cause replacement.
    # Optional property, defaults to “text”.
    # Allowed values: text, multipart
  CharacterClassMap:
    class : String
    # A character class and its corresponding min constraint to generate the random string from.
    # Updates cause replacement.
    # Optional property, defaults to “lettersdigits”.
    # Allowed values: lettersdigits, letters, lowercase, uppercase, digits, hexdigits, octdigits
    min : Integer
    # The minimum number of characters from this character class that will be in the generated string.
    # Updates cause replacement.
    # Optional property, defaults to “1”.
    # The value must be in the range 1 to 512.
    character_sequences : [ CharacterSequenceMap ]
    #A list of character sequences and their constraints to generate the random string from.
    #Updates cause replacement.
    #Optional property.
  CharacterSequenceMap:
    min : Integer
    # The minimum number of characters from this sequence that will be in the generated string.
    # Updates cause replacement.
    # Optional property, defaults to “1”.
    # The value must be in the range 1 to 512.
    length : Integer
    # Length of the string to generate.
    # Updates cause replacement.
    # Optional property, defaults to “32”.
    # The value must be in the range 1 to 512.
    salt : String
    # Value which can be set or changed on stack update to trigger the resource for replacement with a new random string . The salt value itself is ignored by the random generator.
    # Updates cause replacement.
    # Optional property.
    sequence : String
    # Note DEPRECATED - Use property character_classes.
    # Sequence of characters to build the random string from.
    # Updates cause replacement.
    # Optional property.
    # Allowed values: lettersdigits, letters, lowercase, uppercase, digits, hexdigits, octdigits
  ResourceDefMap:
    properties : JSON
    # Property values for the resources in the group
    # Updates cause replacement.
    # Optional property.
    type : String
    # The type of the resources in the group
    # Updates cause replacement.
    # Required property.
  SoftwareConfigInputMap :
    default : String
    #Default value for the input if none is specified.
    #Updates cause replacement.
    #Optional property.
    description : String
    #Description of the input.
    #Updates cause replacement.
    #Optional property.
    name : String
    #Name of the input.
    #Updates cause replacement.
    #Required property.
    type : String
  #Type of the value of the input.
    #Updates cause replacement.
    #Optional property, defaults to “String”.
    #Allowed values: String, Number, CommaDelimitedList, Json
  SoftwareConfigOutputMap:
    description : String
    # Description of the output.
    # Updates cause replacement.
    # Optional property.
    error_output : Boolean
    # Denotes that the deployment is in an error state if this output has a value.
    # Updates cause replacement.
    # Optional property, defaults to “False”.
    name : String
    # Name of the output.
    # Updates cause replacement.
    # Required property.
    type : String
    # Type of the value of the output.
    # Updates cause replacement.
    # Optional property, defaults to “String”.
    # Allowed values: String, Number, CommaDelimitedList, Json
  NetworkGatewayConnectionMap:
    network : String
    #The internal network to connect on the network gateway.
    #Updates cause replacement.
    #Optional property.
    segmentation_id : Integer
    #The id for L2 segment on the external side of the network gateway. Must be specified when using vlan.
    #Updates cause replacement.
    #Optional property.
    #The value must be in the range 0 to 4094.
    segmentation_type : String
    #L2 segmentation strategy on the external side of the network gateway.
    #Updates cause replacement.
    #Optional property, defaults to “flat”.
    #Allowed values: flat, vlan
    network_id : String
    #Note DEPRECATED - Use property network.
    #Updates cause replacement.
    #Optional property.
  NetworkGatewayDeviceMap:
    id : String
    #The device id for the network gateway.
    #Updates cause replacement.
    #Required property.
    interface_name : String
    #The interface name for the network gateway.
    #Updates cause replacement.
    #Required property.
  NeutronPoolVipMap:
    address : String
    #IP address of the vip.
    #Updates cause replacement.
    #Optional property.
    admin_state_up : Boolean
    #The administrative state of this vip.
    #Updates cause replacement.
    #Optional property, defaults to “True”.
    connection_limit : Integer
    #The maximum number of connections per second allowed for the vip.
    #Updates cause replacement.
    #Optional property.
    description : String
    #Description of the vip.
    #Updates cause replacement.
    #Optional property.
    name : String
    #Name of the vip.
    #Updates cause replacement.
    #Optional property.
    protocol_port : Integer
    #TCP port on which to listen for client traffic that is associated with the vip address.
    #Updates cause replacement.
    #Required property.
    session_persistence : NeutronPoolSessionPersistenceMap
    #Configuration of session persistence.
    #Updates cause replacement.
    #Optional property.
    subnet : String
    #Subnet of the vip.
    #Updates cause replacement.
    #Optional property.
  NeutronPoolSessionPersistenceMap:
    cookie_name : String
    #Name of the cookie, required if type is APP_COOKIE.
    #Updates cause replacement.
    #Optional property.
    type : String
    #Method of implementation of session persistence feature.
    #Updates cause replacement.
    #Required property.
    #Allowed values: SOURCE_IP, HTTP_COOKIE, APP_COOKIE
  AllowedAddressPairMap:
    ip_address : String
    #IP address to allow through this port.
    #Updates cause replacement.
    #Required property.
    mac_address : String
    #MAC address to allow through this port.
    #Updates cause replacement.
    #Optional property.
  PortFixedIPMap:
    ip_address : String
    #IP address desired in the subnet for this port.
    #Updates cause replacement.
    #Optional property.
    subnet : String
    #Subnet in which to allocate the IP address for this port.
    #Updates cause replacement.
    #Optional property.
    subnet_id : String
    #Note DEPRECATED - Use property subnet.
    #Updates cause replacement.
    #Optional property.
  RouterExternalGatewayInfo:
    enable_snat : Boolean
    #Enables Source NAT on the router gateway. NOTE: The default policy setting in Neutron restricts usage of this property to administrative users only.
    #Can be updated without replacement.
    #Optional property.
    network : String
    #ID or name of the external network for the gateway.
    #Can be updated without replacement.
    #Required property.
  SecurityGroupRuleMap:
    direction : String
    #The direction in which the security group rule is applied. For a compute instance, an ingress security group rule matches traffic that is incoming (ingress) for that instance. An egress rule is applied to traffic leaving the instance.
    #Updates cause replacement.
    #Optional property, defaults to “ingress”.
    #Allowed values: ingress, egress
    ethertype : String
    #Ethertype of the traffic.
    #Updates cause replacement.
    #Optional property, defaults to “IPv4”.
    #Allowed values: IPv4, IPv6
    port_range_max : Integer
    #The maximum port number in the range that is matched by the security group rule. The port_range_min attribute constrains the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.
    #Updates cause replacement.
    #Optional property.
    port_range_min : Integer
    #The minimum port number in the range that is matched by the security group rule. If the protocol is TCP or UDP, this value must be less than or equal to the value of the port_range_max attribute. If the protocol is ICMP, this value must be an ICMP type.
    #Updates cause replacement.
    #Optional property.
    protocol : String
    #The protocol that is matched by the security group rule. Valid values include tcp, udp, and icmp.
    #Updates cause replacement.
    #Optional property.
    remote_group_id : String
    #The remote group ID to be associated with this security group rule. If no value is specified then this rule will use this security group for the remote_group_id.
    #Updates cause replacement.
    #Optional property.
    remote_ip_prefix : String
    #The remote IP prefix (CIDR) to be associated with this security group rule.
    #Updates cause replacement.
    #Optional property.
    remote_mode : String
    #Whether to specify a remote group or a remote IP prefix.
    #Updates cause replacement.
    #Optional property, defaults to “remote_ip_prefix”.
    #Allowed values: remote_ip_prefix, remote_group_id
  SubnetAllocationPoolMap:
    end : String
    #Updates cause replacement.
    #Required property.
    start : String
    #Updates cause replacement.
    #Required property.
  SubnetHostRouteMap:
    destination : String
    #Updates cause replacement.
    #Required property.
    nexthop : String
    #Updates cause replacement.
    #Required property.
  ServerBlockDeviceMap:
    delete_on_termination : Boolean
    #Indicate whether the volume should be deleted when the server is terminated.
    #Updates cause replacement.
    #Optional property.
    device_name : String
    #A device name where the volume will be attached in the system at /dev/device_name. This value is typically vda.
    #Updates cause replacement.
    #Required property.
    snapshot_id : String
    #The ID of the snapshot to create a volume from.
    #Updates cause replacement.
    #Optional property.
    volume_id : String
    #The ID of the volume to boot from. Only one of volume_id or snapshot_id should be provided.
    #Updates cause replacement.
    #Optional property.
    volume_size : Integer
    #The size of the volume, in GB. It is safe to leave this blank and have the Compute service infer the size.
    #Updates cause replacement.
    #Optional property.
  ServerNetworkMap:
    fixed_ip : String
    #Fixed IP address to specify for the port created on the requested network.
    #Updates cause replacement.
    #Optional property.
    network : String
    #Name or ID of network to create a port on.
    #Updates cause replacement.
    #Optional property.
    port : String
    #ID of an existing port to associate with this server.
    #Updates cause replacement.
    #Optional property.
    uuid : String
    #Note DEPRECATED - Use property network.
    #ID of network to create a port on.
    #Updates cause replacement.
    #Optional property.
  DatabaseMap:
    character_set : String
    #Set of symbols and encodings.
    #Updates cause replacement.
    #Optional property, defaults to “utf8”.
    collate : String
    #Set of rules for comparing characters in a character set.
    #Updates cause replacement.
    #Optional property, defaults to “utf8_general_ci”.
    name : String
    #Specifies database names for creating databases on instance creation.
    #Updates cause replacement.
    #Required property. The length must be no greater than 64.
    # Value must match pattern: [a-zA-Z0-9_]+[a-zA-Z0-9_@?#\s]*[a-zA-Z0-9_]+
  DatabaseUserMap:
    databases : [ String ]
    #Names of databases that those users can access on instance creation.
    #Updates cause replacement.
    #Required property. The length must be at least 1.
    host : String
    #The host from which a user is allowed to connect to the database.
    #Updates cause replacement.
    #Optional property, defaults to “%”.
    name : String
    #User name to create a user on instance creation.
    #Updates cause replacement.
    #Required property. The length must be no greater than 16.
    #Value must match pattern: [a-zA-Z0-9_]+[a-zA-Z0-9_@?#\s]*[a-zA-Z0-9_]+
    password : String
    #Password for those users on instance creation.
    #Updates cause replacement.
    #Required property.
    #Value must match pattern: [a-zA-Z0-9_]+[a-zA-Z0-9_@?#\s]*[a-zA-Z0-9_]+
  IKEPolicyLifetimeMap:
    units : String
    #Safety assessment lifetime units.
    #Updates cause replacement.
    #Optional property, defaults to “seconds”. Allowed values: seconds, kilobytes
    value : Integer
    #Safety assessment lifetime value in specified units.
    #Updates cause replacement.
    #Optional property, defaults to “3600”.
  IPsecPolicyLifetimeMap:
    units : String
    #Safety assessment lifetime units.
    #Updates cause replacement.
    #Optional property, defaults to “seconds”. Allowed values: seconds, kilobytes
    value : Integer
    #Safety assessment lifetime value in specified units.
    #Updates cause replacement.
    #Optional property, defaults to “3600”.
  IPSecDPDMap:
    actions : String
    #Controls DPD protocol mode.
    #Updates cause replacement.
    #Optional property, defaults to “hold”. Allowed values: clear, disabled, hold, restart, restart-by-peer
    interval : Integer
    #Number of seconds for the DPD delay.
    #Updates cause replacement.
    #Optional property, defaults to “30”.
    timeout : Integer
    #Number of seconds for the DPD timeout.
    #Updates cause replacement.
    #Optional property, defaults to “120”.
  NovaSchedulerHintsMap:
    Key : String
    #Updates cause replacement.
    #Required property.
    Value : String
    #Updates cause replacement.
    #Required property.
  CloudFormationStackParameters: JSON
  EC2NetworkInterfaceMap:
    AssociatePublicIpAddress : Boolean
    DeleteOnTermination : Boolean
    Description : String
    DeviceIndex : String
    GroupSet : [ String  ]
    NetworkInterfaceId : String
    PrivateIpAddress : String
    PrivateIpAddresses : [ PrivateIpAddressSpecification ]
    SecondaryPrivateIpAddressCount : Integer
    SubnetId : String
  PrivateIpAddressSpecification:
    PrivateIpAddress: String
    Primary: Boolean
  S3WebsiteConfigurationMap:
    ErrorDocument : String
    #The name of the error document.
    #Updates cause replacement.
    #Optional property.
    IndexDocument : String
    #The name of the index document.
    #Updates cause replacement.
    #Optional property.
  #BlockDeviceMapping:
  #  DeviceName: String
  #  VirtualName: String
  #Ebs: BlockDeviceTemplate
  #BlockDeviceTemplate:
  #  SnapshotId: String
  #  VolumeSize: String
  #NotificationConfiguration:
  # TopicARN: String
  # NotificationType: [ String ]
  AutoScalingTags:
    Key: String
    Value: String
    PropagateAtLaunch: Boolean
  #CloudFrontDistributionConfig:
  #  S3Origin: CloudFrontS3Origin
  #  CustomOrigin: CloudFrontCustomOrigin
  #  Enabled: Boolean
  #  DefaultRootObject: String
  #  CNAMEs: [ String ]
  #  Logging: CloudFrontLogging
  #  TrustedSigners: [ String ]
  #  RequiredProtocols: [ String ]
  #  Comment: String
  #CloudFrontS3Origin:
  #  DNSName: String
  #  OriginAccessIdentity: String
  #CloudFrontCustomOrigin:
  #  DNSName: String
  #  OriginProtocolPolicy: String
  #  HTTPPort: String
  #  HTTPSPort: String
  #CloudFrontLogging:
  #  Bucket: String
  #  Prefix: String
  #MetricDimension:
  #  Name: String
  #  Value: String
  EC2MountPoint:
    Device: String
    VolumeId: String
  EC2SecurityGroupRule:
    IpProtocol: String
    CidrIp: String
    SourceSecurityGroupName: String
    SourceSecurityGroupId: String
    SourceSecurityGroupOwnerId: String
    FromPort: String
    ToPort: String
  EC2Tag:
    Key: String
    Value: String
  #ApplicationVersion:
  #  VersionLabel: String
  #  SourceBundle: SourceBundle
  #ConfigurationTemplate:
  #  TemplateName: String
  #  OptionSettings: OptionSetting
  #  SolutionStackName: String
  #OptionSetting:
  #  NameSpace: String
  #  OptionName: String
  #  Value: String
  #SourceBundle:
  #  S3Bucket: String
  #  S3Key: String
  AppCookieStickinessPolicy:
    CookieName: String
    PolicyName: String
  HealthCheck:
    HealthyThreshold: String
    Interval: String
    Target: String
    Timeout: String
    UnhealthyThreshold: String
  LBCookieStickinessPolicy:
    CookieExpirationPeriod: String
    PolicyName: String
  LBOrAppCookieStickinessPolicy:
    CookieName: String
    PolicyName: String
    CookieExpirationPeriod: String
  Listener:
    InstancePort: String
    InstanceProtocol: String
    LoadBalancerPort: String
    Protocol: String
    SSLCertificateId: String
    PolicyNames: [ LBOrAppCookieStickinessPolicy ]
  #RDSSecurityGroupRule:
  #  CIDRIP: String
  #  EC2SecurityGroupName: String
  #  EC2SecurityGroupOwnerId: String
  #AliasTarget:
  #  HostedZoneId: String
  #  DNSName: String
  WebsiteConfiguration:
    IndexDocument: String
    ErrorDocument: String
  #SubscriptionProperty:
  #  Endpoint: String
  #  Protocol: String
  IAMEmbeddedPolicy:
    PolicyDocument: JSON
    PolicyName: String
  #EC2PortRange:
  #  From: Integer
  #  To: Integer
  #EC2Icmp:
  #  Code: Integer
  #  Type: Integer
